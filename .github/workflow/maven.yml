name: Maven Build Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Compile the Backend Project
  maven-backend-compile-job:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Compile Backend Project with Maven
        run: |
          echo "Compiling the project..."
          cd backend-ms1/
          docker run --rm -v $PWD:/workspace -w /workspace maven:3.9.8 mvn compile -DskipTests

  # Build (Package) the Backend Project
  maven-backend-build-job:
    runs-on: ubuntu-latest
    needs: maven-backend-compile-job  # Ensures this job runs after compile job
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Build (Package) Backend Project with Maven
        run: |
          echo "Packaging the project..."
          cd backend-ms1/
          docker run --rm -v $PWD:/workspace -w /workspace maven:3.9.8 mvn clean package -DskipTests


  semgrep:
    runs-on: ubuntu-latest
    container:
      image: returntocorp/semgrep
    steps:
      - uses: actions/checkout@v4

      - name: Run Semgrep
        run: |
          semgrep --config p/java \
          --config p/java \
          --json --output semgrep-report.json \

      - name: Upload Semgrep Report
        uses: actions/upload-artifact@v4
        with:
          name: semgrep-report
          path: semgrep-report.json


  install-dependencies:
    name: Install Angular Dependencies
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Use Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install Dependencies
        run: |
          cd frontend
          npm install

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

  build-angular:
    name: Build Angular Frontend
    runs-on: ubuntu-latest
    needs: install-dependencies

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Use Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Restore node_modules cache
        uses: actions/cache@v3
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Build Angular App
        run: |
          cd frontend
          npm run build



  build:
    name: Build
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner in fs mode
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-type: 'fs'
          scan-ref: '.'
          trivy-config: trivy.yaml








